{"version":3,"sources":["delegando.gif","actions/note_actions.js","components/edit_note_form.jsx","components/edit_note_container.js","components/note.jsx","components/NoteForm.jsx","components/create_note_container.js","actions/column_actions.js","components/edit_column_form.jsx","components/column.jsx","components/board.jsx","actions/board_actions.js","components/new_board_form.jsx","components/board_index.jsx","components/landing.jsx","components/nav-bar.jsx","App.jsx","reducers/notes_reducer.js","reducers/entities_reducer.js","reducers/board_reducer.js","reducers/columns_reducer.js","reducers/root_reducer.js","reducers/modal_reducer.js","store/store.js","index.js"],"names":["module","exports","CREATE_NOTE","REMOVE_NOTE","UPDATE_NOTE","createNote","note","column","type","notes","id","removeNote","columnId","noteId","updateNote","title","description","colId","EditNoteForm","props","state","handleInput","bind","handleSubmit","e","setState","currentTarget","value","preventDefault","this","showEdit","className","onSubmit","onChange","placeholder","React","Component","connect","ownProps","entities","dispatch","Note","show","handleClick","handleDelete","editForm","onClick","draggableId","String","index","provided","draggableProps","dragHandleProps","ref","innerRef","NoteForm","createFormRef","createRef","handleOuterClick","document","addEventListener","removeEventListener","current","contains","target","length","noteIds","Object","values","push","nextNoteId","col","createForm","cols","rows","allNotes","assign","columns","nextId","CREATE_COLUMN","REMOVE_COLUMN","UPDATE_COLUMN","createColumn","board","updateColumn","deleteColumn","boardId","editColumnForm","node","handleChange","handleOutsideClick","hide","autoFocus","Column","showNoteEdit","hideEdit","renderNotes","selectTitle","deleteSelf","map","idx","key","self","console","log","droppableId","droppableProps","Board","handleDragEnd","columnIds","Array","from","nextColId","result","allColumns","destination","startIdx","Number","source","endIdx","newNotes","splice","sourceColumn","destColumn","sourceNotes","destNotes","columnOrder","slice","newBoard","updateBoard","onDragEnd","direction","renderColumns","withRouter","boards","match","params","NewBoardForm","formRef","hideForm","field","createBoard","BoardIndex","showCreate","deleteBoard","toggleCreateForm","forEach","boardList","to","renderBoards","Landing","src","require","alt","NavBar","App","save","storage","window","localStorage","data","JSON","stringify","setItem","path","notesReducer","action","freeze","newState","nextState","newNote","entitiesReducer","combineReducers","indexOf","newColumn","updatedCol","noteIdx","RootReducer","modal","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","colActions","noteActions","parse","getItem","1","2","3","store","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86c71350.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delegando.f6152c1d.gif\";","export const CREATE_NOTE = \"CREATE_NOTE\";\nexport const REMOVE_NOTE = \"REMOVE_NOTE\";\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\n// export const DELETE_COLUMN_NOTES = \"DELETE_COLUMN_NOTES\"\n\nexport const createNote = (note, column) => {\n  return {\n    type: CREATE_NOTE,\n    note: note,\n    column: { notes: column.notes, id: column.id },\n  };\n};\n\nexport const removeNote = (id,columnId) => ({\n  type: REMOVE_NOTE,\n\tnoteId: id,\n\tcolumnId:columnId\n});\n\n// export const deleteColumnNotes = (noteIds) => {\n// \treturn {\n// \t\ttype: DELETE_COLUMN_NOTES,\n// \t\tnoteIds: noteIds\n// \t}\n// }\n\nexport const updateNote = (note) => {\n  return {\n    type: UPDATE_NOTE,\n    note: {\n      id: note.id,\n      title: note.title,\n      description: note.description,\n      colId: note.colId,\n    },\n  };\n};\n","import React from \"react\";\n\nclass EditNoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.note;\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(type) {\n    return (e) => this.setState({ [type]: e.currentTarget.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.updateNote(this.state);\n    this.props.showEdit();\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"edit-form\" onSubmit={this.handleSubmit}>\n          <div>\n            <input\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.handleInput(\"title\")}\n              placeholder=\"Title\"\n            />\n          </div>\n          <div>\n            <textarea\n              value={this.state.description}\n              onChange={this.handleInput(\"description\")}\n              placeholder=\"Description...\"\n            ></textarea>\n          </div>\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import { connect } from \"react-redux\";\nimport EditNoteForm from \"./edit_note_form\";\nimport { updateNote } from \"../actions/note_actions\";\n\nconst mSTP = (state, ownProps) => {\n  return {\n    note: state.entities.notes[ownProps.note.id],\n  };\n};\n\nconst mDTP = (dispatch) => ({\n  updateNote: (note) => dispatch(updateNote(note)),\n});\n\nexport default connect(mSTP, mDTP)(EditNoteForm);\n","import React from \"react\";\nimport { removeNote } from \"../actions/note_actions\";\nimport { connect } from \"react-redux\";\nimport EditNoteContainer from \"./edit_note_container\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false, showEdit: false };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showEdit = this.showEdit.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.show === false) {\n      this.setState({ show: true });\n    } else {\n      this.setState({ show: false });\n    }\n  }\n\n  showEdit() {\n    if (this.state.showEdit === false) {\n      this.setState({ showEdit: true });\n    } else {\n      this.setState({ showEdit: false });\n    }\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n\n    this.props.removeNote(this.props.note.id, this.props.columnId);\n  }\n\n  render() {\n    let description;\n\n    if (this.state.show === true) {\n      description = (\n\t\t\t\t<div className=\"note-des\">\n\t\t\t\t\t\n          <p  >\n            {this.props.note.description}\n          </p>\n\n\t\t\t\t\t<button onClick={this.showEdit}>Edit</button>\n\t\t\t\t\t\n        </div>\n      );\n    } else {\n      description = <div></div>;\n\t\t}\n\t\t\n    let editForm;\n    if (this.state.showEdit === true) {\n      editForm = (\n        <div>\n          <EditNoteContainer note={this.props.note} showEdit={this.showEdit} />\n        </div>\n      );\n    } else {\n      editForm = (\n        <div className=\"note-heading\">\n          <div onClick={this.handleDelete} className=\"delete-note\">\n            x\n          </div>\n          <h3 className=\"note-title\" onClick={this.handleClick}>\n            {this.props.note.title}\n          </h3>\n          {description}\n        </div>\n      );\n    }\n\n    \n    return (\n\t\t\t<Draggable draggableId={String(this.props.note.id)} index={this.props.index}>\n\t\t\t\t{ (provided)=>\n\t\t\t\t\t<div className=\"note-item\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n\t\t\t\t\t\t{editForm}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Draggable>\n    );\n  }\n}\n\nconst mSTP = (state, ownProps) => {\n  return {};\n};\n\nconst mDTP = (dispatch) => ({\n  removeNote: (noteId,columnId) => dispatch(removeNote(noteId,columnId)),\n});\n\nexport default connect(mSTP, mDTP)(Note);\n","import React from \"react\";\n\nclass NoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      colId: this.props.column.id,\n      show: false,\n\t\t};\n\t\t\n\t\tthis.createFormRef = React.createRef();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleOuterClick = this.handleOuterClick.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n\t\tdocument.addEventListener(\"mousedown\", this.handleOuterClick, false);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tdocument.removeEventListener(\"mousedown\", this.handleOuterClick, false);\n\t}\n\n\thandleOuterClick(e){\n\t\tif (!this.createFormRef.current) return;\n\t\tif (!this.createFormRef.current.contains(e.target)) {\n\t\t\tthis.setState({\n\t\t\t\tshow: false \n\t\t\t})\n\t\t}\n\t}\n\n  handleInput(type) {\n    return (e) => this.setState({ [type]: e.currentTarget.value });\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    if (this.state.show === false) {\n      this.setState({ show: true });\n    } else {\n      this.setState({ show: false });\n    }\n  }\n\n  handleSubmit(e) {\n\t\te.preventDefault();\n\t\t\n\t\tif(this.state.title.length ===0) return; \n\n    let noteIds = Object.values(this.props.column.notes);\n    noteIds.push(this.props.nextNoteId);\n    let col = {\n      notes: noteIds,\n      id: this.props.column.id,\n    };\n\n    this.props.createNote(this.state, col);\n    this.setState({\n      title: \"\",\n      description: \"\",\n      colId: this.props.column.id,\n      show: false,\n\t\t});\n\t\t\n  }\n\n  render() {\n    let createForm;\n\n    if (this.state.show === false) {\n      createForm = <div></div>;\n    } else {\n      createForm = (\n        <form className=\"create-form\" ref={this.createFormRef} onSubmit={this.handleSubmit}>\n          {/* <label className=\"create-title\">Title:</label> */}\n          <input\n            type=\"text\"\n            value={this.state.title}\n            placeholder=\"Title...\"\n            onChange={this.handleInput(\"title\")}\n          />\n\n          {/* <label className=\"create-description\">Description:</label> */}\n          <textarea\n            className=\"create-ta\"\n            cols=\"30\"\n            rows=\"10\"\n            value={this.state.description}\n            placeholder=\"Description here...\"\n            onChange={this.handleInput(\"description\")}\n          ></textarea>\n\n          <button className=\"create-submit\">Create!</button>\n        </form>\n      );\n    }\n\n    return (\n      <div>\n        { !(this.state.show) && <span className=\"add-note\" onClick={this.handleClick}>\n          +\n        </span>\n\t}\n        <div className=\"create-note\">{createForm}</div>\n      </div>\n    );\n  }\n}\n\nexport default NoteForm;\n","import { connect } from \"react-redux\";\nimport { createNote } from \"../actions/note_actions\";\nimport NoteForm from \"./NoteForm\";\n\nconst mSTP = (state, ownProps) => {\n  return {\n    allNotes: Object.assign({}, state.entities.notes),\n    column: Object.assign({}, state.entities.columns[ownProps.colId]),\n    nextNoteId: state.entities.notes.nextId,\n  };\n};\n\nconst mDTP = (dispatch) => ({\n  createNote: (note, col) => dispatch(createNote(note, col)),\n});\n\nexport default connect(mSTP, mDTP)(NoteForm);\n","export const CREATE_COLUMN = \"CREATE_COLUMN\";\nexport const REMOVE_COLUMN = \"REMOVE_COLUMN\";\nexport const UPDATE_COLUMN = \"UPDATE_COLUMN\";\n\nexport const createColumn = (column,board) => {\n    return {\n            type: CREATE_COLUMN,\n            column:{\n                title: column.title,\n                notes: column.notes,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tboard:{\n\t\t\t\t\t\t\tcolumns: board.columns,\n\t\t\t\t\t\t\tid: board.id \n\t\t\t\t\t\t}\n    }\n}\n\nexport const updateColumn = (column) => {\n\treturn {\n\t\ttype: UPDATE_COLUMN,\n\t\tcolumn: column \n\t\t}\n}\n\nexport const deleteColumn = (columnId,boardId, noteIds) => {\n\treturn {\n\t\ttype: REMOVE_COLUMN,\n\t\tcolumnId: columnId,\n\t\tboardId: boardId,\n\t\tnoteIds: noteIds\n\t}\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateColumn } from \"../actions/column_actions\";\nclass editColumnForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Setup State\n    let column = this.props.column;\n    this.state = column;\n\n    //Create a ref to the outer form node\n    this.node = React.createRef();\n\n    //Function bindings\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener(\"mousedown\", this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick(e) {\n    if (!this.node.current) return;\n    if (!this.node.current.contains(e.target)) {\n      this.props.hide();\n    }\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let column = this.state;\n    this.props.updateColumn(column);\n    this.props.hide();\n  }\n\n  render() {\n    return (\n      <form\n        ref={this.node}\n        onSubmit={this.handleSubmit}\n        className=\"edit-column-form\"\n      >\n        <input\n          autoFocus\n          className=\"column-title\"\n          onChange={this.handleChange}\n          value={this.state.title}\n          type=\"text\"\n        />\n        <button className=\"edit-column-submit\" type=\"submit\" >Save Changes</button>\n      </form>\n    );\n  }\n}\n\nfunction mSTP(state, ownProps) {\n  return {\n    column: state.entities.columns[ownProps.columnId],\n  };\n}\n\nfunction mDTP(dispatch) {\n  return {\n    updateColumn: (col) => dispatch(updateColumn(col)),\n  };\n}\n\nexport default connect(mSTP, mDTP)(editColumnForm);\n","import { connect } from \"react-redux\";\nimport React from \"react\";\n\nimport Note from \"./note\";\nimport CreateNoteContainer from \"./create_note_container\";\nimport { createNote, removeNote } from \"../actions/note_actions\";\nimport EditColumnForm from \"./edit_column_form\";\nimport { deleteColumn } from \"../actions/column_actions\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEdit: false,\n      showNoteEdit: false,\n    };\n\n    this.showEdit = this.showEdit.bind(this);\n    this.hideEdit = this.hideEdit.bind(this);\n    this.renderNotes = this.renderNotes.bind(this);\n    this.selectTitle = this.selectTitle.bind(this);\n    this.deleteSelf = this.deleteSelf.bind(this);\n  }\n\n  showEdit(e) {\n    e.preventDefault();\n\n    this.setState({\n      showEdit: true,\n    });\n  }\n\n  hideEdit() {\n    this.setState({\n      showEdit: false,\n    });\n  }\n\n  renderNotes() {\n    let notes = this.props.column.notes;\n\n\t\treturn notes.map((noteId, idx) => {\n\t\t\tlet note = this.props.allNotes[noteId]\n     return (<Note note={note} key={note.id} columnId={this.props.column.id} index={idx}/>)\n\t\t}\n\t\t)\n  }\n\n  selectTitle() {\n\t\tlet self = this.props.column;\n    if (this.state.showEdit) {\n      return <EditColumnForm columnId={self.id} hide={this.hideEdit} />;\n    } else {\n      return <h2 onClick={this.showEdit}>{self.title}</h2>;\n    }\n  }\n\n  deleteSelf(e) {\n    e.preventDefault();\n    console.log(this.props.column);\n    this.props.deleteColumn(\n      this.props.column.id,\n      this.props.boardId,\n      this.props.column.notes\n    );\n  }\n\n  render() {\n    const { column } = this.props;\n\n    let title = this.selectTitle();\n\n    return (\n\t\t\t\n\t\t\t<Draggable draggableId={`c${column.id}`} index={this.props.index}>{ (provided) => \n\t\t\t\t\n\t\t\t\t<div className=\"column\"\n\t\t\t\t{...provided.draggableProps}\n\t\t\t\tref={provided.innerRef}\n\t\t\t\t\n\t\t\t\t>\n\t\t\t\t\t<div className=\"delete-col\" onClick={this.deleteSelf}>\n\t\t\t\t\t\tX\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column-heading\" {...provided.dragHandleProps}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<CreateNoteContainer colId={column.id} />\n\n\t\t\t\t\t<Droppable droppableId={String(column.id)} type=\"note\">\n\t\t\t\t\t\t{ (provided)=>\n\t\t\t\t\t\t\t<div className=\"notes-list\" {...provided.droppableProps} ref={provided.innerRef} >\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>{this.renderNotes()}</ul>\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t\t</Droppable>\n\n\t\t\t\t</div>\n\t\t\t\n\t\t\t}</Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    allNotes: state.entities.notes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeNote: (note) => dispatch(removeNote(note)),\n  createNote: (note) => dispatch(createNote(note)),\n  deleteColumn: (columnId, boardId, noteIds) =>\n    dispatch(deleteColumn(columnId, boardId, noteIds)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Column);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Column from \"./column\";\nimport { createColumn, updateColumn } from \"../actions/column_actions\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { updateBoard } from \"../actions/board_actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nclass Board extends React.Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.createColumn = this.createColumn.bind(this);\n\t\tthis.handleDragEnd = this.handleDragEnd.bind(this);\n  }\n\n  renderColumns(columns) {\n    return columns.map((col,idx) => {\n      return <Column column={col} key={col.id} index={idx} boardId={this.props.board.id} />;\n    });\n  }\n\n  createColumn() {\n\t\tlet columnIds = Array.from(this.props.board.columns)\n    let newColumn = {\n      title: \"New Column\",\n      notes: [],\n    };\n\n\t\tcolumnIds.push(this.props.nextColId);\n\t\tthis.props.createColumn(newColumn,{columns:columnIds, id: this.props.board.id});\n\t}\n\t\n\thandleDragEnd(result) {\n\t\tlet allColumns = this.props.allColumns\n\t\tif(!result.destination) return;\n\t\tconsole.log(result); \n\t\n\t\tif(result.type === \"note\"){\n\n\t\t\tlet startIdx = Number(result.source.index);\n\t\t\tlet endIdx = Number(result.destination.index);\n\t\t\tlet noteId = Number(result.draggableId);\n\n\t\t\tif(result.source.droppableId === result.destination.droppableId){ //If dropping in the same column\n\t\t\t\tlet columnId = Number(result.destination.droppableId);\n\t\t\t\tlet notes = allColumns[columnId].notes;\n\t\t\t\tlet newNotes = Array.from(notes);\n\n\t\t\t\t//Move the note in the source column\n\t\t\t\tnewNotes.splice(startIdx, 1);\n\t\t\t\tnewNotes.splice(endIdx, 0, noteId);\n\n\t\t\t\t//Update Redux with our new board state\n\t\t\t\tthis.props.updateColumn({ id: columnId, notes: newNotes })\n\n\t\t\t}else{ // if moving columns\n\t\t\t\tlet sourceColumn = Number(result.source.droppableId);\n\t\t\t\tlet destColumn = Number(result.destination.droppableId);\n\t\t\t\tlet sourceNotes = Array.from(allColumns[sourceColumn].notes);\n\t\t\t\tlet destNotes = Array.from(allColumns[destColumn].notes);\n\n\t\t\t\t//Remove the Note from the source column\n\t\t\t\tsourceNotes.splice(startIdx,1);\n\n\t\t\t\t//Add the Note to the destination column\n\t\t\t\tdestNotes.splice(endIdx,0,noteId);\n\n\t\t\t\t//Update Redux with the new board state\n\t\t\t\tthis.props.updateColumn({id:sourceColumn, notes: sourceNotes});\n\t\t\t\tthis.props.updateColumn({id:destColumn, notes: destNotes});\n\t\t\t}\n\t\t} else if(result.type ===\"column\"){\n\t\t\tlet columnOrder = Array.from(this.props.board.columns);\n\n\t\t\t//column id's come from the result object in the form \"c<id>\", so we need to extract the id and parse\n\t\t\tlet colId = Number(result.draggableId.slice(1));\n\t\t\tlet source = result.source;\n\t\t\tlet destination = result.destination;\n\t\t\t//If invalid drop, return\n\t\t\tif(!destination) return;\n\n\t\t\tlet startIdx = source.index;\n\t\t\tlet endIdx = destination.index;\n\n\t\t\t//move the columns\n\t\t\tcolumnOrder.splice(startIdx,1);\n\t\t\tcolumnOrder.splice(endIdx,0,colId);\n\t\t\tlet newBoard = Object.assign({},this.props.board, {columns:columnOrder});\n\n\t\t\tthis.props.updateBoard(newBoard);\n\t\t}\n\t\t\n\t}\n\n  render() {\n\t\t\n\t\tlet {board} = this.props;\n    let columnsIds = this.props.board.columns;\n    let columns = columnsIds.map((id) => this.props.allColumns[id]);\n\t\t\n    return (\n      <section className=\"board\">\n\t\t\t\t<h1>{board.title}</h1>\n        <button onClick={this.createColumn}>Add Column</button>\n\t\t\t\t<DragDropContext\n\t\t\t\t\tonDragEnd={this.handleDragEnd}\n\t\t\t\t>\n\t\t\t\t\t<Droppable droppableId={`b${board.id}`} direction=\"horizontal\" type=\"column\">\n\t\t\t\t\t\t{(provided) => \n\t\t\t\t\t\t\n        \t\t\t<div className=\"columns\"\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\tref = {provided.innerRef}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{this.renderColumns(columns)}\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Droppable>\n\t\t\t\t</DragDropContext>\n      </section>\n    );\n  }\n}\n\nfunction mSTP(state, ownProps) {\n\t\n  return {\n    allColumns: Object.assign({},state.entities.columns),\n    board: Object.assign({},state.entities.boards[ownProps.match.params.id]),\n    nextColId: state.entities.columns.nextId,\n  };\n}\n\nfunction mDTP(dispatch) {\n  return {\n\t\tcreateColumn: (column,board) => dispatch(createColumn(column,board)),\n\t\tupdateColumn: (column) => dispatch(updateColumn(column)),\n\t\tupdateBoard: (board) => dispatch(updateBoard(board))\n  };\n}\n\nexport default withRouter( connect(mSTP, mDTP)(Board) );\n","import note from \"../components/note\";\n\nexport const UPDATE_BOARD = \"UPDATE_BOARD\";\nexport const CREATE_BOARD = \"CREATE_BOARD\";\nexport const DELETE_BOARD = \"DELETE_BOARD\";\n\nexport function updateBoard(board){\n\treturn{\n\t\ttype:UPDATE_BOARD,\n\t\tboard:board\n\t}\n}\n\nexport function createBoard(board){\n\n\treturn{\n\t\ttype:CREATE_BOARD,\n\t\tboard: board\n\t}\n}\n\nexport function deleteBoard(boardId, columnIds, noteIds){\n\treturn {\n\t\ttype:DELETE_BOARD,\n\t\tboardId: boardId,\n\t\tcolumnIds: columnIds,\n\t\tnoteIds: noteIds\n\t}\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createBoard } from \"../actions/board_actions\";\n\nclass NewBoardForm extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle:\"\"\n\t\t}\n\n\t\tthis.formRef = React.createRef();\n\n\t\t//Bindings\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleOuterClick=this.handleOuterClick.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"mousedown\", this.handleOuterClick, false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"mousedown\", this.handleOuterClick, false);\n\t}\n\n\thandleOuterClick(e){\n\t\n\t\tif (!this.formRef.current) return;\n\t\tif (!this.formRef.current.contains(e.target)) {\n\t\t\tthis.props.hideForm(); \n\t\t}\n\t\tconsole.log(); \n\t}\n\n\thandleChange(field){\n\t\treturn (e)=>{\n\t\t\te.preventDefault();\n\t\t\tthis.setState({\n\t\t\t\t[field]: e.target.value\n\t\t\t})\n\t\t}\n\t}\n\n\thandleSubmit(e){\n\t\te.preventDefault();\n\t\tif(this.state.title.length === 0) return; \n\t\t\n\t\tlet board = Object.assign({},this.state);\n\t\tboard.columns = [];\n\t\tthis.props.createBoard(board);\n\t\tthis.props.hideForm(); \n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<section className=\"new-board-form\" ref={this.formRef}>\n\t\t\t\t\n\t\t\t\t<label> \n\t\t\t\t\t<h2>Title</h2><input onChange={this.handleChange(\"title\")} value={this.state.title} type=\"text\"/>\n\t\t\t\t</label>\n\t\t\t\t<button onClick={this.handleSubmit}>Create!</button>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nfunction mSTP(){\n\treturn {\n\n\t}\n}\n\nfunction mDTP(dispatch) {\n\treturn {\n\t\tcreateBoard: (board) => dispatch(createBoard(board)),\n\n\t}\n}\n\nexport default connect(mSTP, mDTP)(NewBoardForm);","import React from \"react\";\nimport {connect}from \"react-redux\";\n\nimport {Link} from \"react-router-dom\";\nimport NewBoardForm from \"./new_board_form\";\nimport { deleteBoard } from \"../actions/board_actions\";\n\nclass BoardIndex extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tshowCreate: false \n\t\t}\n\n\t\tthis.createFormRef = React.createRef();\n\n\t\tthis.deleteBoard = this.deleteBoard.bind(this);\n\t\tthis.toggleCreateForm = this.toggleCreateForm.bind(this);\n\t\tthis.hideForm = this.hideForm.bind(this);\n\t}\n\n\thideForm(){\n\t\tthis.setState({\n\t\t\tshowCreate: false\n\t\t})\n\t}\n\n\tdeleteBoard(board){\n\t\treturn (e) => {\n\t\t\t\n\t\t\te.preventDefault();\n\t\t\tlet columns = board.columns.map((id) => this.props.allColumns[id]);\n\t\t\tlet notes = [];\n\t\t\tcolumns.forEach((column) => notes.push(...column.notes));\n\t\t\t\n\t\t\tlet columnIds = Array.from(board.columns);\n\t\t\tthis.props.deleteBoard(board.id, columnIds, notes);\n\t\t}\n\n\t}\n\n\trenderBoards(){\n\t\tlet boardList = [];\n\t\tfor(let boardId in this.props.boards){\n\t\t\tif(boardId !== \"nextId\") boardList.push(this.props.boards[boardId]);\n\t\t} \n\t\tlet boardLinks = boardList.map((board,idx)=>{\n\t\t\t\n\t\t\treturn(\n\t\t\t<div key={idx}>\n\t\t\t\t\t<span onClick={this.deleteBoard(board)}>x</span>\n\t\t\t\t\t<Link to={`/boards/${board.id}`}><h2>{board.title}</h2></Link>\n\t\t\t</div>)\n\t\t})\n\t\treturn boardLinks;  \n\t}\n\n\ttoggleCreateForm(){\n\t\tthis.setState({\n\t\t\tshowCreate: !this.state.showCreate\n\t\t}); \n\t}\n\trender(){\n\n\t\tlet createForm = null;\n\t\tif(this.state.showCreate){\n\t\t\tcreateForm = <NewBoardForm hideForm={this.hideForm} />;\n\t\t} \n\n\t\treturn(\n\t\t<section className=\"board-index\">\n\t\t\t<h1>All Boards \n\t\t\t{!this.state.showCreate &&\t<span className=\"add-board-button\" onClick={this.toggleCreateForm}>+</span>}\n\t\t\t</h1>\n\n\t\t\t{createForm}\n\t\t\t\n\t\t\t<div className=\"all-boards\">\n\t\t\t\t\t{this.renderBoards()}\n\t\t\t</div>\n\t\t</section>\n\t\t)\n\t}\n}\n\nfunction mSTP(state){\n\treturn {\n\t\tboards: state.entities.boards,\n\t\tallColumns: state.entities.columns\n\t}\n}\n\nfunction mDTP(dispatch){\n\treturn{\n\t\tdeleteBoard: (boardId,columnIds,noteIds) => dispatch(deleteBoard(boardId,columnIds,noteIds)),\n\n\t}\n}\n\nexport default connect(mSTP,mDTP)(BoardIndex);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Landing() {\n  return (\n    <section>\n      <header className=\"landing-one\">\n        <h3>Helping you delegate your tasks</h3>\n        <img src={require(\"../delegando.gif\")} alt=\"gif\"></img>\n        <Link to=\"/boards\">Start here</Link>\n      </header>\n\n      <article className=\"landing-two\">\n        <h2>Get yourself organized</h2>\n        <p>\n          create custom kanban boards to efficiently delegate tasks to everyone\n          on your team\n        </p>\n      </article>\n\n      <article className=\"landing-three\">\n        <h2>What is Delegando?</h2>\n        <div>\n          <p>\n            {\" \"}\n            <h3>Founders who care</h3>Delegando, founded in 2020 by Daniel Yee,\n            Daniel Chau, and Ajay Rajamani, empowers teams to make rapid\n            progress on their goals\n          </p>\n          <p>\n            <h3>A revolutionary company</h3> We're disrupting the kan-ban\n            ecosystem with our revolutionary, \"bare bones\" technology, that\n            stores all of your data in the most secure place: Local Storage.\n            Because we believe less, is more.{\" \"}\n          </p>\n          <p>\n            <h3>All about efficiency</h3> We help anyone and everyone with their\n            efficiency goals, no matter how farfetched or unrealistic. Anything\n            is possible.\n          </p>\n        </div>\n      </article>\n    </section>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavBar(){\n\n\treturn(\n\t\t<header className=\"nav-bar\">\n\t\t\t<h1><Link to=\"/\">Delegando</Link></h1>\n\t\t\t<h2><Link to=\"/boards\">Boards</Link></h2>\n\t\t</header>\n\t)\n}","import React from \"react\";\nimport {connect} from 'react-redux';\nimport \"./styles/index.css\";\nimport Board from \"./components/board\";\nimport { HashRouter, Switch, Route} from \"react-router-dom\";\nimport BoardIndex from \"./components/board_index\";\nimport Landing from \"./components/landing\";\nimport NavBar from \"./components/nav-bar\";\n\nclass App extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.save = this.save.bind(this);\n\t}\n\n\tsave(){\n\t\tlet storage = window.localStorage;\n\t\tif(this.props.state){\n\t\t\tlet data = JSON.stringify(this.props.state);\n\t\t\tstorage.setItem(\"data\", data);\n\t\t}\n\t}\n\n\trender(){\n\t\tthis.save();\n\t\treturn (\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t<HashRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/boards/:id\">\n\t\t\t\t\t\t\t<Board />\n\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t<Route path=\"/boards\">\n\t\t\t\t\t\t\t<BoardIndex />\n\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<Landing/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\n\t\t\t\t</HashRouter>\n\t\t\t\n\t\t\t\n\t\t);\n\t} \n  \n}\n\nfunction mSTP(state){\n\treturn{\n\t\tstate:state\n\t}\n}\n\nexport default connect (mSTP, null)(App);\n\n\n\n","import { CREATE_NOTE, REMOVE_NOTE, UPDATE_NOTE } from \"../actions/note_actions\";\nimport { REMOVE_COLUMN } from \"../actions/column_actions\";\nimport { DELETE_BOARD } from \"../actions/board_actions\";\n\nconst notesReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let nextState = {};\n\tlet newState; \n  switch (action.type) {\n    case CREATE_NOTE:\n      let id = state.nextId;\n\n      let note = Object.assign({}, action.note, { id: id });\n\n      const newNote = { [id]: note };\n\n      return Object.assign(nextState, state, newNote, { nextId: id + 1 });\n\n    case REMOVE_NOTE:\n\t\t\t\n      nextState = Object.assign({}, state);\n      delete nextState[action.noteId];\n\n      return nextState;\n    case UPDATE_NOTE:\n      return Object.assign({}, state, { [action.note.id]: action.note });\n\n    case (REMOVE_COLUMN ):\n\t\t\t\n      newState = Object.assign({}, state);\n      action.noteIds.forEach((noteId) => {\n        delete newState[noteId];\n      });\n\t\t\treturn newState;\n\t\t\n\t\tcase DELETE_BOARD:\n\t\t\tnewState = Object.assign({}, state);\n\t\t\taction.noteIds.forEach((noteId) => {\n\t\t\t\tdelete newState[noteId];\n\t\t\t});\n\t\t\treturn newState;\n\t\t\n\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;\n","import { combineReducers } from \"redux\";\nimport boardReducer from './board_reducer';\nimport columnsReducer from './columns_reducer';\nimport notesReducer from './notes_reducer';\n\nconst entitiesReducer = combineReducers({\n    boards: boardReducer,\n    columns: columnsReducer,\n    notes: notesReducer\n});\n\nexport default entitiesReducer;","import { CREATE_COLUMN, REMOVE_COLUMN } from \"../actions/column_actions\";\nimport { UPDATE_BOARD, CREATE_BOARD, DELETE_BOARD } from \"../actions/board_actions\";\n\nexport default function boardReducer(state = {}, action) {\n\n    Object.freeze(state);\n\n\t\tlet board;\n\t\tlet newBoard;\n\t\tlet newState;\n    switch (action.type) {\n\n\t\t\tcase CREATE_BOARD:\n\t\t\t\tboard = action.board;\n\t\t\t\tboard.id = state.nextId;\n\n\t\t\t\tif(!board.columns) board.columns = []; \n\n\t\t\t\treturn Object.assign({},state,{[board.id]:board},{nextId:state.nextId+1});\n\t\t\t\n\t\t\tcase CREATE_COLUMN:\n\t\t\t\tboard = state[action.board.id];\n\t\t\t\tnewBoard = Object.assign({},board,action.board);\n\n\t\t\t\treturn Object.assign({},state,{[action.board.id]: newBoard});\n\t\t\t\n\t\t\tcase REMOVE_COLUMN:\n\t\t\t\tboard = state[action.boardId];\n\t\t\t\tlet columnIds = Array.from(board.columns);\n\t\t\t\tlet idx = columnIds.indexOf(action.columnId);\n\t\t\t\tcolumnIds.splice(idx,1);\n\t\t\t\tnewBoard = Object.assign({},board,{columns: columnIds});\n\t\t\t\treturn Object.assign({},state,{[newBoard.id]:newBoard})\n\t\t\t\n\t\t\tcase UPDATE_BOARD:\n\t\t\t\t\n\t\t\t\treturn Object.assign({},state,{[action.board.id]: action.board});\n\t\t\t\n\t\t\tcase DELETE_BOARD:\n\t\t\t\tnewState = Object.assign({},state);\n\t\t\t\tdelete newState[action.boardId];\n\t\t\t\treturn newState; \n\n      default:\n        return state;\n    }\n}","import {\n  CREATE_COLUMN,\n  UPDATE_COLUMN,\n  REMOVE_COLUMN,\n} from \"../actions/column_actions\";\n\nimport { CREATE_NOTE, REMOVE_NOTE } from \"../actions/note_actions\";\nimport { DELETE_BOARD } from \"../actions/board_actions\";\n\nexport default function columnsReducer(state = {}, action) {\n  Object.freeze(state);\n  let column;\n\tlet newColumn; \n\tlet newState; \n  switch (action.type) {\n    case CREATE_COLUMN:\n      // First, let's get the next availible object id\n      let id = state.nextId;\n\n      // create our new column object\n      column = Object.assign({}, action.column, { id: id });\n\n      //Duplicate the current state and add our new column object\n      return Object.assign(\n        {},\n        state,\n\n        { [id]: column }, // Our new object, namespaced under its new id\n\n        { nextId: id + 1 }\n      ); //Increment the next availible id by 1\n\n    case UPDATE_COLUMN:\n\t\t\t\tlet colId = action.column.id\n\t\t\t\tlet updatedCol = {\n\t\t\t\t\t...state[colId],\n\t\t\t\t\t...action.column\n\t\t\t\t}\n      return Object.assign({}, state, { [action.column.id]: updatedCol });\n\n    case REMOVE_COLUMN:\n      newState = Object.assign({}, state);\n      delete newState[action.columnId];\n      return newState;\n\t\t\n\t\tcase CREATE_NOTE:\n      column = state[action.column.id];\n\t\t\tnewColumn = Object.assign({}, column, action.column);\n\n\t\t\treturn Object.assign({}, state, { [action.column.id]: newColumn });\n\t\t\t\n\t\tcase REMOVE_NOTE:\n\t\t\tcolumn = state[action.columnId];\n\t\t\tlet newNotes = Array.from(column.notes);\n\t\t\tlet noteIdx = newNotes.indexOf(action.noteId);\n\t\t\tnewNotes.splice(noteIdx,1);\n\t\t\tnewColumn = Object.assign({},column,{notes:newNotes});\n\t\t\treturn Object.assign({},state,{[action.columnId]:newColumn});\n\t\tcase DELETE_BOARD:\n\t\t\tnewState = Object.assign({}, state);\n\t\t\taction.columnIds.forEach((columnId) => {\n\t\t\t\tdelete newState[columnId];\n\t\t\t});\n\t\t\treturn newState;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport entitiesReducer from \"./entities_reducer\"\nimport modalReducer from \"./modal_reducer\";\n\nconst RootReducer = combineReducers({\n\t\tentities: entitiesReducer,\n\t\tmodal: modalReducer\n});\n\nexport default RootReducer;\n","\nexport default function modalReducer(state={}, action){\n\t\tObject.freeze(state);\n\n\t\tswitch (action.type){\n\t\t\tdefault:\n\t\t\t\treturn state; \n\t\t}\n}","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) =>{\n  \n  return createStore(rootReducer, preloadedState, applyMiddleware(thunk, logger))\n};\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\nimport configureStore from \"./store/store\";\n\n// TEST IMPORTS\n  import * as colActions from \"./actions/column_actions\";\n  import * as noteActions from \"./actions/note_actions\";\nimport { Provider } from \"react-redux\";\n//\n\nwindow.colActions = colActions;\nwindow.noteActions = noteActions; \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n \n\t// Initialize state\n\tlet storage = window.localStorage;\n\tlet state = JSON.parse(storage.getItem('data'));\n\t// let state; \n\tconsole.log(state); \n\tif(!state){\n\t\tstate = {\n\t\t\tentities: {\n\t\t\t\tboards: {\n\t\t\t\t\t1: {\n\t\t\t\t\t\ttitle: \"My First Board\",\n\t\t\t\t\t\tcolumns: [1,2,3],\n\t\t\t\t\t\tid:1\n\t\t\t\t\t},\n\t\t\t\t\tnextId: 2,\n\t\t\t\t},\n\t\t\t\tcolumns: {\n\t\t\t\t\t1:{\n\t\t\t\t\t\ttitle:\"To Do\",\n\t\t\t\t\t\tnotes:[],\n\t\t\t\t\t\tid:1\n\t\t\t\t\t},\n\t\t\t\t\t2: {\n\t\t\t\t\t\ttitle: \"In Progress\",\n\t\t\t\t\t\tnotes: [],\n\t\t\t\t\t\tid: 2\n\t\t\t\t\t},\n\t\t\t\t\t3: {\n\t\t\t\t\t\ttitle: \"Done\",\n\t\t\t\t\t\tnotes: [],\n\t\t\t\t\t\tid: 3\n\t\t\t\t\t},\n\t\t\t\t\tnextId: 4,\n\t\t\t\t},\n\t\t\t\tnotes: {\n\t\t\t\t\tnextId: 1,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n  \n\n  //Create a store with the preloaded state\n  let store = configureStore(state);\n\n  //TEST LINE\n    window.store = store;\n  //\n\n  ReactDOM.render(\n    <React.StrictMode>\n\t\t\t<Provider store={store}>\n      \t<App />\n\t\t\t</Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}); "],"sourceRoot":""}